/*
 * File: app/controller/HamperController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cobuy.controller.HamperController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'allNonCustomHamper',
            selector: 'hampermanagermainpanel allnoncustomhampersgrid'
        }
    ],

    onAddingHamperProductsButtonClick: function(button, e, eOpts) {
        var grid = this.getAllNonCustomHamper(),
        		record = grid.getSelectionModel().getSelection();

        if(record[0]){

            var win = Ext.create('cobuy.view.AddingProductsToHamperWin');
            var form = win.down('form');

            Ext.Ajax.request({

        				 url: '/cobuy/index.php?r=Product/getExtraInformationAboutAHamper',
                        params:{
                                hamper_id:record[0].get('id')
                         },
        			     //success or failure
        				success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
        					if (jsonResponse.success) {
                                var total_hamper_cost = jsonResponse.total_hamper_cost;
                                var hamper_container_id = jsonResponse.hamper_container_id;
                                if(hamper_container_id>0){
                                    var hamper_container = hamper_container_id;
                                }else{
                                   // hamper_container = "";
                                }




                            } //success ends here

                            var values = {
                                 hamper_label:record[0].get('name'),
                                 hamper_id:record[0].get('id'),
                                cost_of_hamper:Ext.util.Format.number(total_hamper_cost,'0,000.00'),
                                total_cost_for_computation:total_hamper_cost,
                                hamper_container:hamper_container
                               };
                            form.getForm().setValues(values);

                            //load the hamper dataview

                            win.down('#hamperDataview').getStore().load({
                                params:{
                                    hamper_id:record[0].get('id')
                                    }
                            });

                            win.show();
        				}



        });





        }else{
            Ext.Msg.alert('Error', 'Please select a hamper to add or edit its content');
        }
    },

    onHamperProductGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        var grid = this.getAllNonCustomHamper(),
        		record = grid.getSelectionModel().getSelection();

        if(record[0]){

            var win = Ext.create('cobuy.view.AddingProductsToHamperWin');
            var form = win.down('form');

            Ext.Ajax.request({

        				 url: '/cobuy/index.php?r=Product/getExtraInformationAboutAHamper',
                        params:{
                                hamper_id:record[0].get('id')
                         },
        			     //success or failure
        				success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
        					if (jsonResponse.success) {
                                var total_hamper_cost = jsonResponse.total_hamper_cost;
                                var hamper_container_id = jsonResponse.hamper_container_id;
                                if(hamper_container_id>0){
                                    var hamper_container = hamper_container_id;
                                }else{
                                   // hamper_container = "";
                                }


                            } //success ends here

                            var values = {
                                 hamper_label:record[0].get('name'),
                                 hamper_id:record[0].get('id'),
                                cost_of_hamper:Ext.util.Format.number(total_hamper_cost,'0,000.00'),
                                total_cost_for_computation:total_hamper_cost,
                                hamper_container:hamper_container
                               };
                            form.getForm().setValues(values);

                            //load the hamper dataview

                            win.down('#hamperDataview').getStore().load({
                                params:{
                                    hamper_id:record[0].get('id')
                                    }
                            });

                            win.show();
        				}



        });





        }else{
            Ext.Msg.alert('Error', 'Please select a hamper to add or edit its content');
        }
    },

    onSelectingAProductForhamperDataviewItemClick: function(dataview, record, item, index, e, eOpts) {
        var win = dataview.up('window');

        var values = {
            add_product_name:record.get('name'),
            add_product_id:record.get('id')
        };

        win.down('form').getForm().setValues(values);
    },

    onSelectingAProductInTheHamperDataviewItemClick: function(dataview, record, item, index, e, eOpts) {
        var win = dataview.up('window');

        var values = {
            remove_product_name:record.get('name'),
            remove_product_id:record.get('id')
        };

        win.down('form').getForm().setValues(values);
    },

    onRemovingProductFromHamperButtonClick: function(button, e, eOpts) {
        var win = button.up('window');

        var product_id = win.down('form').down('hiddenfield[name=remove_product_id]').getValue();

        var hamper_id = win.down('form').down('hiddenfield[name=hamper_id]').getValue();



        Ext.Msg.show({
                         title:'Remove Product from Hamper',
                         msg: 'Are you sure you want to remove this product from this hamper?',
                         buttons: Ext.Msg.YESNO,
                         icon: Ext.Msg.QUESTION,
                         fn: function (buttonId){
                            if (buttonId == 'yes'){
                                Ext.Ajax.request({
                                   url: '/cobuy/index.php?r=Product/removingAProductFromHamper',
        							params:{
        								product_id:product_id,
        								hamper_id:hamper_id


        							},
                                    success: function(conn, response, options, eOpts) {

                                        var result = Ext.JSON.decode(conn.responseText);

                                        if (result.success) {

                                            Ext.Msg.alert('Success!', result.msg);
                                            var values = {
                                                cost_of_hamper:Ext.util.Format.number(result.price,'0,000.00')
                                            };
                                            win.down('form').getForm().setValues(values);
                                            win.down('#hamperDataview').getStore().load({
        									params:{

        											hamper_id:hamper_id
        										}
        									});

                                        } else {
                                            var error = Ext.JSON.decode(conn.responseText);
                                            Ext.Msg.alert('Error', error.msg);
                                        }
                                    },
                                    failure: function(conn, response, options, eOpts) {

                                        Ext.Msg.alert('Failure', 'Communication Error');
                                    }
                                });
                            }
                         }
                    });
    },

    onAddingAProductToHamperButtonClick: function(button, e, eOpts) {
        var win = button.up('window');

        var product_id = win.down('form').down('hiddenfield[name=add_product_id]').getValue();

        var hamper_id = win.down('form').down('hiddenfield[name=hamper_id]').getValue();

        var quantity = win.down('form').down('numberfield[name=product_quantity]').getValue();


        Ext.Msg.show({
                         title:'Adding Product to Hamper',
                         msg: 'Are you sure you want to add this product to this hamper?',
                         buttons: Ext.Msg.YESNO,
                         icon: Ext.Msg.QUESTION,
                         fn: function (buttonId){
                            if (buttonId == 'yes'){
                                Ext.Ajax.request({
                                   url: '/cobuy/index.php?r=Product/addingAProductToHamper',
        							params:{
        								product_id:product_id,
        								hamper_id:hamper_id,
                                        quantity:quantity


        							},
                                    success: function(conn, response, options, eOpts) {

                                        var result = Ext.JSON.decode(conn.responseText);

                                        if (result.success) {

                                            Ext.Msg.alert('Success!', result.msg);
                                            var values = {
                                                cost_of_hamper:Ext.util.Format.number(result.price,'0,000.00')
                                            };
                                            win.down('form').getForm().setValues(values);
                                            win.down('#hamperDataview').getStore().load({
        									params:{

        											hamper_id:hamper_id
        										}
        									});

                                        } else {
                                            var error = Ext.JSON.decode(conn.responseText);
                                            Ext.Msg.alert('Error', error.msg);
                                        }
                                    },
                                    failure: function(conn, response, options, eOpts) {

                                        Ext.Msg.alert('Failure', 'Communication Error');
                                    }
                                });
                            }
                         }
                    });
    },

    onViewHamperContainerImageButtonClick: function(button, e, eOpts) {

        var win = button.up('window');

        var container_id = win.down('#hampercontainerCombo').getValue();

        var win = Ext.create('cobuy.view.HamperContainerImageWin');

        //load the dataview

        win.down('#hamperDataview').getStore().load({
            params:{
                container_id:container_id
            }
        });

        win.show();
    },

    onHamperDataviewItemDblClick: function(dataview, record, item, index, e, eOpts) {
        var win = Ext.create('cobuy.view.HamperContainerDetailsWin');

        var form = win.down('form');

        //load the form

        form.loadRecord(record);

        win.show();
    },

    onHamperContentDataviewItemDblClick: function(dataview, record, item, index, e, eOpts) {
        var wwin = dataview.up('window');

        var hamper_id = wwin.down('form').down('hiddenfield[name=hamper_id]').getValue();

        console.log('the hamper id is:',hamper_id);

        console.log('this item record is:',record.get('id'));

        var win = Ext.create('cobuy.view.ChangeTheQuantityOfHamperContentWin');

        var form = win.down('form');

        Ext.Ajax.request({

        				 url: '/cobuy/index.php?r=Product/getTheQuantityOfThisProductInThisHamper',
                        params:{
                                hamper_id:hamper_id,
                            product_id:record.get('id')
                         },
        			     //success or failure
        				success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
        					if (jsonResponse.success) {
                                var quantity = jsonResponse.quantity;


                            } //success ends here

                            var values = {
                                 name:record.get('name'),
                                 hamper_id:hamper_id,
                                product_id:record.get('id'),
                                product_quantity_in_the_hamper:quantity
                               };
                            form.getForm().setValues(values);

                          win.show();
        				}



        });


    },

    onChangingTheQuantityOfAnItemInAHamperButtonClick: function(button, e, eOpts) {
        var win = button.up('window'),
            formPanel = win.down('form');

        var hamper_id = win.down('form').down('hiddenfield[name=hamper_id]').getValue();

        var product_id = win.down('form').down('hiddenfield[name=product_id]').getValue();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
                            url: '/cobuy/index.php?r=Product/changingTheQuantityOfAHamperItem',
                            params:{
                                product_id:product_id,
                                hamper_id:hamper_id
                            },

                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    var values = {
                                                cost_of_hamper:Ext.util.Format.number(result.price,'0,000.00')
                                            };
                                            Ext.getCmp('addingproductstohamperwin').down('form').getForm().setValues(values);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');

                                    win.close();

                                 } else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
    },

    onHamperContainerComboboxSelect: function(combo, records, eOpts) {
        var win = combo.up('window');

        var hamper_id = win.down('form').down('hiddenfield[name=hamper_id]').getValue();

        var container_id = combo.getValue();

        var form = win.down('form');


        Ext.Ajax.request({

        				 url: '/cobuy/index.php?r=Product/getTheNewTotalCostForTheHamper',
                        params:{
                                hamper_id:hamper_id,
                                container_id:container_id
                         },
        			     //success or failure
        				success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
        					if (jsonResponse.success) {
                               var total_hamper_cost = jsonResponse.total_hamper_cost;


                            } //success ends here

                            var values = {
                                cost_of_hamper:Ext.util.Format.number(total_hamper_cost,'0,000.00'),
                                total_cost_for_computation:total_hamper_cost
                               };
                            form.getForm().setValues(values);

                          win.show();
        				}



        });
    },

    onDisplayingHamperOnStoreButtonClick: function(button, e, eOpts) {
        var win = button.up('window'),
        			formPanel = win.down('form'),
        			store = this.getAllNonCustomHamper().getStore();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
        					url: '/cobuy/index.php?r=Product/DisplayThisHamperOnStore',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
        							store.load();

        							win.close();
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
    },

    init: function(application) {
        this.control({
            "hampermanagermainpanel button#hamperproductsBtn": {
                click: this.onAddingHamperProductsButtonClick
            },
            "hampermanagermainpanel grid": {
                itemdblclick: this.onHamperProductGridpanelItemDblClick
            },
            "addingproductstohamperwin dataview#productDataview": {
                itemclick: this.onSelectingAProductForhamperDataviewItemClick
            },
            "addingproductstohamperwin dataview#hamperDataview": {
                itemclick: this.onSelectingAProductInTheHamperDataviewItemClick,
                itemdblclick: this.onHamperContentDataviewItemDblClick
            },
            "addingproductstohamperwin button#removeproductfromhamperBtn": {
                click: this.onRemovingProductFromHamperButtonClick
            },
            "addingproductstohamperwin button#addhamperBtn": {
                click: this.onAddingAProductToHamperButtonClick
            },
            "addingproductstohamperwin button#hampercontainerBtn": {
                click: this.onViewHamperContainerImageButtonClick
            },
            "hampercontainerimagewin dataview#hamperDataview": {
                itemdblclick: this.onHamperDataviewItemDblClick
            },
            "button#changethequantityofproductinhamperBtn": {
                click: this.onChangingTheQuantityOfAnItemInAHamperButtonClick
            },
            "combobox#hampercontainerCombo": {
                select: this.onHamperContainerComboboxSelect
            },
            "addingproductstohamperwin button#displayhamperBtn": {
                click: this.onDisplayingHamperOnStoreButtonClick
            }
        });
    }

});
