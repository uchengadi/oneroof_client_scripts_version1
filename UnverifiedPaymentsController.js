/*
 * File: app/controller/UnverifiedPaymentsController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cobuy.controller.UnverifiedPaymentsController', {
    extend: 'Ext.app.Controller',

    models: [
        'Payment'
    ],
    stores: [
        'Payments'
    ],
    views: [
        'UnverifiedPaymentMainpanel',
        'TheUnverifiedPaymentWin'
    ],

    refs: [
        {
            ref: 'allUnverifiedPaymentsGrid',
            selector: 'unverifiedpaymentmainpanel grid'
        }
    ],

    onViewUnverifiedPaymentsButtonClick: function(button, e, eOpts) {
        var grid = this.getAllUnverifiedPaymentsGrid(),
        		record = grid.getSelectionModel().getSelection();

        		if(record[0]) {
        			var editWin = Ext.create('cobuy.view.TheUnverifiedPaymentWin');
        			var form = editWin.down('form');


        			Ext.Ajax.request({

        				 url: '/cobuy/index.php?r=Payment/retrievePaymentDetailsForUpdate',
        			     params: {
        					id: record[0].get('id'),
                            order_id:record[0].get('order_id'),
                             bank_account_id:record[0].get('bank_account_id')
        				},
                     //success or failure
        				success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
        					if (jsonResponse.success) {

                                var bank_account = jsonResponse.bank_number;
                                var order_number = jsonResponse.order_number;
                                var amount_in_bank= record[0].get('gross_amount') + record[0].get('delivery_charges');


        					}

        					var values = {

                                bank_account:bank_account,
                                order_number:order_number,
                                gross_amount_for_display:Ext.util.Format.number(record[0].get('gross_amount'),'0,000.00'),
                                net_amount_for_display:Ext.util.Format.number(record[0].get('net_amount'),'0,000.00'),
                                discounted_amount_for_display:Ext.util.Format.number(record[0].get('discounted_amount'),'0,000.00'),
                                vat_for_display:Ext.util.Format.number(record[0].get('vat'),'0,000.00'),
                                revenue_for_display:Ext.util.Format.number(record[0].get('revenue'),'0,000.00'),
                                delivery_charges:Ext.util.Format.number(record[0].get('delivery_charges'),'0,000.00'),
                                amount_in_bank:Ext.util.Format.number(amount_in_bank,'0,000.00')



        					};


        					form.loadRecord(record[0]);

        					form.getForm().setValues(values);


        				}




        			});


        			editWin.show();
        		} else {
        				Ext.Msg.alert('Error!', 'Please Select an unverified Payment to verify');
        		}
    },

    onSavingThisConfirmedUnverifiedPaymentButtonClick: function(button, e, eOpts) {
        var win = button.up('window'),
        			formPanel = win.down('form'),
        			store = this.getAllUnverifiedPaymentsGrid().getStore();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
                            url: '/cobuy/index.php?r=Payment/confirmThisPayment',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
        							store.load();

        							win.close();
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
    },

    onUnverifiedPaymentPanelRender: function(component, eOpts) {
        component.down('grid').getStore().load();
    },

    onUnverifiedPaymentGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        this.onViewUnverifiedPaymentsButtonClick();
    },

    onConfirmPaymentCheckboxfieldChange: function(field, newValue, oldValue, eOpts) {
        var win = field.up('window');

        if(newValue == 1){
            //activate the confirm button
        win.down('#confirmPaymentBtn').setDisabled(false);
        }else{
            //deactivate the confirm button
        win.down('#confirmPaymentBtn').setDisabled(true);
        }


    },

    onSaveThisFailedPaymentButtonClick: function(button, e, eOpts) {
        var win = button.up('window'),
        			formPanel = win.down('form'),
        			store = this.getAllUnverifiedPaymentsGrid().getStore();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
                            url: '/cobuy/index.php?r=Payment/failThisPayment',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
        							store.load();

        							win.close();
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
    },

    init: function(application) {
        this.control({
            "unverifiedpaymentmainpanel button#confirmBtn": {
                click: this.onViewUnverifiedPaymentsButtonClick
            },
            "theunverifiedpaymentwin button#confirmPaymentBtn": {
                click: this.onSavingThisConfirmedUnverifiedPaymentButtonClick
            },
            "unverifiedpaymentmainpanel": {
                render: this.onUnverifiedPaymentPanelRender
            },
            "unverifiedpaymentmainpanel grid": {
                itemdblclick: this.onUnverifiedPaymentGridpanelItemDblClick
            },
            "checkboxfield#confirmpaymentCheckbox": {
                change: this.onConfirmPaymentCheckboxfieldChange
            },
            "theunverifiedpaymentwin button#failedPaymentBtn": {
                click: this.onSaveThisFailedPaymentButtonClick
            }
        });
    }

});
