/*
 * File: app/controller/UnfulfilledOrdersController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cobuy.controller.UnfulfilledOrdersController', {
    extend: 'Ext.app.Controller',

    models: [
        'Order'
    ],
    stores: [
        'Orders'
    ],

    refs: [
        {
            ref: 'allUnfulfilledOrdersGrid',
            selector: 'unfullfilledordersmainpanel grid'
        }
    ],

    onViewUnfilledOrdersButtonClick: function(button, e, eOpts) {
        var grid = this.getAllUnfulfilledOrdersGrid(),
        		record = grid.getSelectionModel().getSelection();

        		if(record[0]) {
        			var editWin = Ext.create('cobuy.view.TheUnfullfilledOrderWin');
        			var form = editWin.down('form');


        			Ext.Ajax.request({

        				 url: '/cobuy/index.php?r=Order/retrieveOrderDetails',
        			     params: {
        					id: record[0].get('id')
        				},
                     //success or failure
        				success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
        					if (jsonResponse.success) {




        					}

        					var values = {

        						name: record[0].get('name'),
        						description: record[0].get('description'),
        						icon: record[0].get('icon')


        					};


        					form.loadRecord(record[0]);

        					form.getForm().setValues(values);


        				}




        			});


        			editWin.show();
        		} else {
        				Ext.Msg.alert('Error!', 'Please Select an Order');
        		}
    },

    onViewThisUnfullfilledOrdersButtonClick: function(button, e, eOpts) {
        var win = button.up('window');

        win.destroy();
    },

    init: function(application) {
        this.control({
            "unfullfilledordersmainpanel button#viewBtn": {
                click: this.onViewUnfilledOrdersButtonClick
            },
            "theunfullfilledorderwin button#viewBtn": {
                click: this.onViewThisUnfullfilledOrdersButtonClick
            }
        });
    }

});
