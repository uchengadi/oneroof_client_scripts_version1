/*
 * File: app/controller/AllSubscriptionPaymentController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cobuy.controller.AllSubscriptionPaymentController', {
    extend: 'Ext.app.Controller',

    models: [
        'SubscriptionPayment'
    ],
    stores: [
        'AllSubscriptionPayments'
    ],
    views: [
        'AllSubscriptionPaymentsMainpanel'
    ],

    refs: [
        {
            ref: 'allSubscriptionPaymentsGrid',
            selector: 'allsubscriptionpaymentsmainpanel grid'
        }
    ],

    onNewSubscriptionPaymentButtonClick: function(button, e, eOpts) {
        var win = Ext.create('cobuy.view.AddNewSubscriptionPaymentWin');

        win.show();
    },

    onAllSubscriptionPanelRender: function(component, eOpts) {
        component.down('grid').getStore().load();
    },

    onMemberComboboxSelect: function(combo, records, eOpts) {
        var win = combo.up('window');

        var form = win.down('form');

        Ext.Ajax.request({

        				 url: '/cobuy/index.php?r=SubscriptionPayment/retrievePaymentDetails',
        			     params: {
        					member_id: combo.getValue()
        				},
                     //success or failure
        				success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
        					if (jsonResponse.success) {

                                var amount = jsonResponse.amount;
                                var discount_amount = jsonResponse.discount_amount;
                                var invoice_number = jsonResponse.invoice_number;
                                var membership_type = jsonResponse.membership_type;
                                var membership_type_id = jsonResponse.membership_type_id;
                                var membership_number=jsonResponse.membership_number;
                                var net_amount=jsonResponse.net_amount;


        					}

        					var values = {

                                invoice_number:invoice_number,
                                amount:amount,
                                amount_for_display:Ext.util.Format.number(amount,'0,000.00'),
                                discounted_amount:discount_amount,
                                discounted_amount_for_display:Ext.util.Format.number(discount_amount,'0,000.00'),
                                member_id:combo.getValue(),
                                membership_type:membership_type,
                                membership_type_id:membership_type_id,
                                membership_number:membership_number,
                                net_amount:net_amount,
                                net_amount_for_display:Ext.util.Format.number(net_amount,'0,000.00')



        					};


        					//form.loadRecord(record[0]);

        					form.getForm().setValues(values);


        				}




        			});

    },

    onSaveNewSubscriptionPaymentButtonClick: function(button, e, eOpts) {
        var win = button.up('window'),
        			formPanel = win.down('form'),
        			store = this.getAllSubscriptionPaymentsGrid().getStore();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
                            url: '/cobuy/index.php?r=SubscriptionPayment/addNewSubscriptionPayment',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
        							store.load();

        							win.close();
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
    },

    onEditSubscriptionPaymentButtonClick: function(button, e, eOpts) {
        var grid = this.getAllSubscriptionPaymentsGrid(),
        		record = grid.getSelectionModel().getSelection();



            if(record[0]) {
                if(Ext.String.uncapitalize(record[0].get('status')) == 'pending' || Ext.String.uncapitalize(record[0].get('status')) == 'unconfirmed' || Ext.String.uncapitalize(record[0].get('status')) == 'failed'){
                    var editWin = Ext.create('cobuy.view.EditSubscriptionPaymentWin');

                }else if(Ext.String.uncapitalize(record[0].get('status'))=='confirmed'){
                   var editWin = Ext.create('cobuy.view.AlreadyVerifiedSubscriptionPaymentWin');
                }

        	  var form = editWin.down('form');


        			Ext.Ajax.request({

        				 url: '/cobuy/index.php?r=SubscriptionPayment/retrievePaymentDetailsForUpdate',
        			     params: {
        					id: record[0].get('id'),
                            member_id:record[0].get('member_id'),
                             bank_account_id:record[0].get('bank_account_id')
        				},
                     //success or failure
        				success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
        					if (jsonResponse.success) {

                                var bank_account = jsonResponse.bank_number;
                                var membership_type = jsonResponse.membership_type;
                                var member=jsonResponse.member;
                                var membership_number=jsonResponse.membership_number;


        					}

        					var values = {

                                bank_account:bank_account,
                                membership_type:membership_type,
                                member:member,
                                membership_number:membership_number,
                                amount_for_display:Ext.util.Format.number(record[0].get('amount'),'0,000.00'),
                                discounted_amount_for_display:Ext.util.Format.number(record[0].get('discounted_amount'),'0,000.00'),
                                net_amount_for_display:Ext.util.Format.number(record[0].get('net_amount'),'0,000.00')


        					};


        					form.loadRecord(record[0]);

        					form.getForm().setValues(values);


        				}




        			});


        			editWin.show();
        		} else {
        				Ext.Msg.alert('Error!', 'Please Select a Subscription Payment to edit');
        		}







    },

    onSaveEdittedSubscriptionPaymentButtonClick: function(button, e, eOpts) {
        var win = button.up('window'),
        			formPanel = win.down('form'),
        			store = this.getAllSubscriptionPaymentsGrid().getStore();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
                            url: '/cobuy/index.php?r=SubscriptionPayment/updateSubscriptionPayment',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
        							store.load();

        							win.close();
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
    },

    onAllSubscriptionGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        this.onEditSubscriptionPaymentButtonClick();
    },

    onOkForConfirmedSubscriptionButtonClick: function(button, e, eOpts) {
        var win = button.up('window');

        win.destroy();
    },

    init: function(application) {
        this.control({
            "allsubscriptionpaymentsmainpanel button#addBtn": {
                click: this.onNewSubscriptionPaymentButtonClick
            },
            "allsubscriptionpaymentsmainpanel": {
                render: this.onAllSubscriptionPanelRender
            },
            "combobox#memberCombo": {
                select: this.onMemberComboboxSelect
            },
            "addnewsubscriptionpaymentwin button#addBtn": {
                click: this.onSaveNewSubscriptionPaymentButtonClick
            },
            "allsubscriptionpaymentsmainpanel button#editBtn": {
                click: this.onEditSubscriptionPaymentButtonClick
            },
            "editsubscriptionpaymentwin button#addBtn": {
                click: this.onSaveEdittedSubscriptionPaymentButtonClick
            },
            "allsubscriptionpaymentsmainpanel grid": {
                itemdblclick: this.onAllSubscriptionGridpanelItemDblClick
            },
            "alreadyverifiedsubscriptionpaymentwin button#okBtn": {
                click: this.onOkForConfirmedSubscriptionButtonClick
            }
        });
    }

});
