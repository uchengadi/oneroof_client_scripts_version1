/*
 * File: app/controller/LoginController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cobuy.controller.LoginController', {
    extend: 'Ext.app.Controller',

    views: [
        'LoginForm',
        'Login'
    ],

    onCancelButtonClick: function(button, e, eOpts) {
        button.up('form').getForm().reset();
    },

    onLoginButtonClick: function(button, e, eOpts) {
        var formPanel = button.up('form'),
        			login = button.up('login'),
        			username = formPanel.down('textfield[name=username]').getValue(),
        			pass = formPanel.down('textfield[name=password]').getValue();

        			//if the form is validated
        			if(formPanel.getForm().isValid()) {
        				//pass = Appstore.util.MD5.encode(pass);
        				Ext.get(login.getEl()).mask("Authenticating ... Please wait...", 'loading');
        				Ext.Ajax.request({
        					url: '/cobuy/index.php?r=Members/Login',
        					params: {
        						username: username,
        						password: pass
        						//userType: 'admin'
        					},
        					success: function(conn, response, options, eOpts) {
        						Ext.get(login.getEl()).unmask();
        						var result = Ext.JSON.decode(conn.responseText, true);
        						if(!result) {
        							result = {};
        							result.success = false;
        							result.msg = conn.responseText;
        						}
        						if(result.success) {
        							login.close();
        							Ext.create('cobuy.view.Mainviewport');
        							//Appstore.util.SessionMonitor.start();
        						} else {
        							Ext.Msg.show({
        								title: 'Fail!',
                                        msg: result.msg,
                                        icon: Ext.Msg.ERROR,
        								buttons: Ext.Msg.OK
        							});
        						}
        					},

        					failure: function(conn, response, options, eOpts) {
        						var result = Ext.JSON.decode(conn.responseText, true);
                                Ext.get(login.getEl()).unmask();
        						Ext.Msg.show({
        							title: 'Error!',
        							msg: result.msg,
                                    icon: Ext.Msg.ERROR,
        							buttons: Ext.Msg.OK
        						});
        					}


        				});
        			}
    },

    onEnterKeyForLoginTextfieldSpecialkey: function(field, e, eOpts) {
        if(e.getKey()== e.ENTER){
        			var submitBtn = field.up('form').down('button#loginBtn');
        			submitBtn.fireEvent('click', submitBtn, e, eOpts);

        			}
    },

    onCapslockKeyTextfieldKeypress: function(textfield, e, eOpts) {
        var charCode = e.getCharCode();
        			if((e.shiftKey && charCode >=97 && charCode <= 122) || (!e.shiftKey && charCode >=65 && charCode <= 90)){
        				if(this.getCapslockTooltip() === undefined){
        					Ext.widget('capslocktooltip');
        				}
        				this.getCapslockTooltip().show();
        			}else{

        				if(this.getCapslockTooltip() !== undefined){
        				this.getCapslockTooltip().hide();
        				}
        			}
    },

    init: function(application) {
        this.control({
            "login button#cancelloginBtn": {
                click: this.onCancelButtonClick
            },
            "login button#loginBtn": {
                click: this.onLoginButtonClick
            },
            "login form textfield": {
                specialkey: this.onEnterKeyForLoginTextfieldSpecialkey
            },
            "login form textfield[name=password]": {
                keypress: this.onCapslockKeyTextfieldKeypress
            }
        });
    }

});
