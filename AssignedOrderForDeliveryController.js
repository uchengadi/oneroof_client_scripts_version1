/*
 * File: app/controller/AssignedOrderForDeliveryController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cobuy.controller.AssignedOrderForDeliveryController', {
    extend: 'Ext.app.Controller',

    models: [
        'OrderDelivery'
    ],
    stores: [
        'OrderDeliveries'
    ],
    views: [
        'AssignedOrdersForDeliveryMainpanel',
        'TheAssignedOrdersForDeliveryWin'
    ],

    refs: [
        {
            ref: 'allAssignedOrdersForDeliveryGrid',
            selector: 'assignedordersfordeliverymainpanel grid'
        }
    ],

    onAssignedOrderForDeliveryButtonClick: function(button, e, eOpts) {

        var grid = this.getAllAssignedOrdersForDeliveryGrid(),
        		record = grid.getSelectionModel().getSelection();

        		if(record[0]) {
        			var editWin = Ext.create('cobuy.view.TheAssignedOrdersForDeliveryWin');
        			var form = editWin.down('form');


        			Ext.Ajax.request({

        				 url: '/cobuy/index.php?r=Order/retrieveOrderDetails',
        			     params: {
        					order_initiated_by: record[0].get('order_initiated_by'),
                             delivery_city_id:record[0].get('delivery_city_id'),
                             delivery_state_id:record[0].get('delivery_state_id'),
                             delivery_country_id:record[0].get('delivery_country_id'),
                             order_id:record[0].get('id')
        				},
                     //success or failure
        				success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
        					if (jsonResponse.success) {

                                var requester = jsonResponse.requester;
                                var country = jsonResponse.country;
                                var state = jsonResponse.state;
                                var city = jsonResponse.city;
                                var payment_status=jsonResponse.payment_status;
                                var delivery_type=jsonResponse.delivery_type;



        					}

        					var values = {

                                requester:requester,
                                city:city,
                                state:state,
                                country:country,
                                payment_status:payment_status,
                                order_delivery_type:delivery_type


        					};


        					form.loadRecord(record[0]);

        					form.getForm().setValues(values);


        				}




        			});



        			editWin.show();
        		} else {
        				Ext.Msg.alert('Error!', 'Please Select an Order');
        		}
    },

    onAssignThisOrderForDeliveryButtonClick: function(button, e, eOpts) {
        var win = button.up('window'),
        			formPanel = win.down('form'),
        			store = this.getAllAssignedOrdersForDeliveryGrid().getStore();

        var payment_status = win.down('#paymentStatus').getValue();

        if(payment_status == 'confirmed'){

            if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
        					url: '/cobuy/index.php?r=Order/AssignThisOrderForDelivery',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
        							store.load();

        							win.close();
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}

        }else{
            Ext.Msg.alert('Payment Issue', "Payment of this order is yet to be verified");
        }



    },

    onAssignOrdersForDeliveryGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        //this.onAssignedOrderForDeliveryButtonClick();

        var win = Ext.create('cobuy.view.ProductsInOrderWin');

        var values = {
            order_id:record.get('id'),
            status: record.get('status')
        };


        //load the form

        win.down('form').getForm().setValues(values);


        win.show();
    },

    onAssignedOrdersForDeliveryPanelRender: function(component, eOpts) {
        component.down('grid').getStore().load();
    },

    init: function(application) {
        this.control({
            "assignedordersfordeliverymainpanel button#assignBtn": {
                click: this.onAssignedOrderForDeliveryButtonClick
            },
            "theassignedordersfordeliverywin button#assignBtn": {
                click: this.onAssignThisOrderForDeliveryButtonClick
            },
            "assignedordersfordeliverymainpanel grid": {
                itemdblclick: this.onAssignOrdersForDeliveryGridpanelItemDblClick
            },
            "assignedordersfordeliverymainpanel": {
                render: this.onAssignedOrdersForDeliveryPanelRender
            }
        });
    }

});
