/*
 * File: app/controller/AssigningSpecificationsToProductTypeController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cobuy.controller.AssigningSpecificationsToProductTypeController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'allSpecificationsInProductTypeGrid',
            selector: 'assignspecificationstoproducttypes grid'
        }
    ],

    onAssignSpecificationsToProducttypeButtonClick: function(button, e, eOpts) {
        var win= Ext.create('cobuy.view.AssignSpecificationsToProductTypeWin');

        var form = win.down('form');

        var container =form.down('#specificationsSet');

        Ext.Ajax.request({
                             url: '/cobuy/index.php?r=ProductSpecification/retrieveallspecifications',

                             //success or failure

                			success: function(response){
                				var jsonResponse = Ext.decode(response.responseText);


                				if (jsonResponse.success) {

                					var checkboxGroup = {
                                         xtype: 'checkboxgroup',
                                         columns: 1,
                                          vertical: true,
                                          width: 500,
                                         //fieldLabel: 'Resource Group',
                                         //name: 'recipients',
                                         style: {
                                               padding: '5px 10px 5px 10px'
                                         },
                                   items: []

                              };

                               var i, j,  len = jsonResponse.specification.length, checkbox, select, name;
                               for (i = 0; i < len; i++){

                					checkbox = jsonResponse.specification[i];
                				/**	for( j = 0; j < length; j++){
                							select = jsonResponse.selected[j];

                							if(select.specification_id === checkbox.id) {
                								checkbox.select_value = select.specification_id;
                								//assign_name = select.assign_name;
                								//assign_description = select.assign_description;
                								//name = category_name;

                							}else {

                								//assign_name = select.assign_name;
                								//assign_description = select.assign_description;
                								//name = category_name;
                							}


                						} **/
                						checkboxGroup.items.push({
                							xtype: 'checkbox',
                							boxLabel: checkbox.name,
                							name: 'specifications[]',
                							inputValue: checkbox.id
                							//checked: checkbox.select_value

                						});



                              }

                			container.add(checkboxGroup);

                            }

                		/**	var values = {
                				name: category_name,
                				//assign_name: assign_name,
                				//assign_description: assign_description,
                                id: category_id


                			};


                		   form.getForm().setValues(values);
                           **/
                           }





                        });





        win.show();
    },

    onSaveTheAssignedSpecificationsToThisProducttypeButtonClick: function(button, e, eOpts) {
        var win = button.up('window'),
        			formPanel = win.down('form'),
        			store = this.getAllSpecificationsInProductTypeGrid().getStore();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
        					url: '/cobuy/index.php?r=ProductSpecification/AssignSpecificationsToProducttype',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
        							store.load();

        							win.close();
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
    },

    onRemoveSpecificationFromProductTypeButtonClick: function(button, e, eOpts) {
        var grid = this.getAllSpecificationsInProductTypeGrid();
        		var record= grid.getSelectionModel().getSelection();

        if(record[0]){


        	Ext.Msg.show({
                         title:'Delete?',
                         msg: 'Are you sure you want to remove this Specification from this product type?',
                         buttons: Ext.Msg.YESNO,
                         icon: Ext.Msg.QUESTION,
                         fn: function (buttonId){
                            if (buttonId == 'yes'){
                                Ext.Ajax.request({
                                    url: '/cobuy/index.php?r=ProductSpecification/removeThisSpecificationFromThisProducttype',
                                    params: {
                                        type_id: record[0].get('product_type_id'),
                                        spec_id: record[0].get('specification_id')

                                    },
                                    success: function(conn, response, options, eOpts) {

                                        var result = Ext.JSON.decode(conn.responseText);

                                        if (result.success) {

                                            Ext.Msg.alert('Success!', result.msg);
                                            grid.getStore().load();

                                        } else {
                                            var error = Ext.JSON.decode(conn.responseText);
                                            Ext.Msg.alert('Error', error.msg);
                                        }
                                    },
                                    failure: function(conn, response, options, eOpts) {

                                        Ext.Msg.alert('Failure', 'Communication Error');
                                    }
                                });
                            }
                         }
                    });

        }else {
        				Ext.Msg.alert('Error!', 'Please Select a specification in a product type to remove');
        		}

    },

    onAssignedSpecificationToProducttypeGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        var win= Ext.create('cobuy.view.EditAssignedSpecificationsInProductTypeWin');

        var form = win.down('form');

        var container =form.down('#specificationsSet');

        Ext.Ajax.request({
                             url: '/cobuy/index.php?r=ProductSpecification/retrievespecificationsforproducttypes',
                            params:{
                                product_type_id : record.get('product_type_id'),
                                specification_id: record.get('specification_id')
                            },

                             //success or failure

                			success: function(response){
                				var jsonResponse = Ext.decode(response.responseText);


                				if (jsonResponse.success) {

                					var checkboxGroup = {
                                         xtype: 'checkboxgroup',
                                         columns: 1,
                                          vertical: true,
                                          width: 500,
                                         //fieldLabel: 'Resource Group',
                                         //name: 'recipients',
                                         style: {
                                               padding: '5px 10px 5px 10px'
                                         },
                                   items: []

                              };

                               var i, j,  len = jsonResponse.specification.length, length = jsonResponse.selected.length,checkbox, select, name;
                               var product_type = jsonResponse.producttype;
                                    for (i = 0; i < len; i++){

                					checkbox = jsonResponse.specification[i];
                				for( j = 0; j < length; j++){
                							select = jsonResponse.selected[j];

                							if(select.specification_id === checkbox.id) {
                								checkbox.select_value = select.specification_id;

                							}
                						}
                						checkboxGroup.items.push({
                							xtype: 'checkbox',
                							boxLabel: checkbox.name,
                							name: 'specifications[]',
                							inputValue: checkbox.id,
                							checked: checkbox.select_value

                						});



                              }

                			container.add(checkboxGroup);

                            }

                		var values = {
                				producttype: product_type

                			};

                          form.loadRecord(record);
                		   form.getForm().setValues(values);

                           }





                        });





        win.show();
    },

    onSaveThisAssignedSpecificationsToProducttypeButtonClick: function(button, e, eOpts) {
        var win = button.up('window'),
        			formPanel = win.down('form'),
        			store = this.getAllSpecificationsInProductTypeGrid().getStore();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
        					url: '/cobuy/index.php?r=ProductSpecification/ReassignSpecificationsToProducttype',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
        							store.load();

        							win.close();
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
    },

    init: function(application) {
        this.control({
            "assignspecificationstoproducttypes button#addBtn": {
                click: this.onAssignSpecificationsToProducttypeButtonClick
            },
            "assignspecificationstoproducttypewin button#assignBtn": {
                click: this.onSaveTheAssignedSpecificationsToThisProducttypeButtonClick
            },
            "assignspecificationstoproducttypes button#deleteBtn": {
                click: this.onRemoveSpecificationFromProductTypeButtonClick
            },
            "assignspecificationstoproducttypes grid": {
                itemdblclick: this.onAssignedSpecificationToProducttypeGridpanelItemDblClick
            },
            "editassignedspecificationsinproducttypewin button#assignBtn": {
                click: this.onSaveThisAssignedSpecificationsToProducttypeButtonClick
            }
        });
    }

});
